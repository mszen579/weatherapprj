{"version":3,"sources":["Components/Titles.js","Components/Form.js","Components/Weather.js","App.js","index.js"],"names":["Titles","react_default","a","createElement","className","Form","props","onSubmit","getWeather","type","name","placeholder","Weather","temperature","city","country","humidity","description","error","API_KEY","App","state","descriptionn","_callee","event","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","console","log","_this","setState","main","temp","sys","weather","stop","Components_Titles","Components_Form","this","Components_Weather","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5456e829.chunk.js","sourcesContent":["//stateless component\r\nimport React from 'react'\r\n\r\nconst Titles  = () =>(\r\n<div>\r\n        <h1 className=\"title-container__title\">Weather Finder</h1>\r\n        <p className=\"title-container__subtitle\">Find out temperature, conditions and more ...</p>\r\n</div>\r\n);\r\n\r\nexport default Titles ;\r\n\r\n\r\n//class based component\r\n// import React, { Component } from 'react'\r\n\r\n// export default class Titels extends Component {\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <h1>Weather Finder</h1>\r\n//                 <p>Find out temperature, conditions and more</p>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n","\r\nimport React from 'react'\r\n\r\n// to use stateless component we can use the below code. stateless component is usefull for saving memory and for more efficient functionality\r\n// here we can not use this anymore as we are using stateless component and props will be bassed as an argument in the arrow function as below:\r\nconst Form = (props) =>(\r\n        <div>\r\n                <form onSubmit={props.getWeather}>\r\n                <input type=\"text\" name=\"city\" placeholder=\"Enter your city please\"/>\r\n                <input type=\"text\" name=\"country\" placeholder=\"Enter your country please\"/>\r\n                <button>Get weather</button>\r\n                </form>\r\n        </div>\r\n);\r\n\r\nexport default Form;\r\n\r\n\r\n// class based component\r\n\r\n// import React, { Component } from 'react'\r\n// export default class Form extends Component {\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <form onSubmit={this.props.getWeather}>\r\n//                     <input type=\"text\" name=\"city\" placeholder=\"Enter your city please\"/>\r\n//                     <input type=\"text\" name=\"country\" placeholder=\"Enter your country please\"/>\r\n//                     <button>Get weather</button>\r\n//                 </form>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n","import React from 'react'\r\n\r\n// to use stateless component we can use the below code. stateless component is usefull for saving memory and for more efficient functionality\r\n// here we can not use this anymore as we are using stateless component and props will be bassed as an argument in the arrow function as below:\r\nconst Weather = (props) => (\r\n\r\n    <div className=\"weather__info\">\r\n             {props.temperature && <p className=\"weather__key\"> Temperature: <span className=\"weather__value\"> {props.temperature}</span></p>}\r\n            {props.city && <p className=\"weather__key\">City: <span className=\"weather__value\">{props.city}</span></p>}\r\n            {props.country && <p className=\"weather__key\">Country: <span className=\"weather__value\">{props.country}</span></p>}\r\n            {props.humidity && <p className=\"weather__key\">Humidity: <span className=\"weather__value\">{props.humidity}</span></p>}\r\n            {props.description && <p className=\"weather__key\">Description: <span className=\"weather__value\">{props.description}</span></p>}\r\n            {props.error &&  <strong>{props.error}</strong>}\r\n        </div>\r\n\r\n)\r\n\r\nexport default Weather;\r\n\r\n\r\n// class based component\r\n\r\n//import React, { Component } from 'react'\r\n// export default class Weather extends Component {\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n\r\n//                    {this.props.temperature && <p> temperature: {this.props.temperature}</p>}\r\n//                     {this.props.city && <p>city: {this.props.city}</p>}\r\n//                     {this.props.country && <p>country: {this.props.country}</p>}\r\n//                     {this.props.humidity && <p>humidity: {this.props.humidity}</p>}\r\n//                     {this.props.description && <p>description: {this.props.description}</p>}\r\n//                     {this.props.error &&  <strong>{this.props.error}</strong>}\r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n// }","import React, { Component } from 'react';\nimport Titles   from './Components/Titles';\nimport Form from './Components/Form';\nimport Weather from './Components/Weather';\nimport \"./App.css\";\n\n// weather api key: 46034bb37b36defaa100ce706b11625a, URL (http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`)\n\n// this is for Rotterdam as example: http://api.openweathermap.org/data/2.5/weather?q=Rotterdam,nl&appid=46034bb37b36defaa100ce706b11625a&units=metric`\n\n// my weather api key:\nconst API_KEY = \"46034bb37b36defaa100ce706b11625a\";\n\n\nexport default class App extends Component {\n\nstate = {\n  temperature : \"\",\n  city : \"\",\n  country : \"\",\n  humidity : \"\",\n  descriptionn: \"\",\n  error: \"\",\n\n}\n\n  getWeather = async (event) =>{\n    //we use event.preventDefault(); to prevent the page from refreshing and to get the information\n    event.preventDefault();\n    //now we need to link the other inputs from the form to fill in the api call and this will be achived via creating \n    const city = event.target.elements.city.value;\n    const country = event.target.elements.country.value;\n    \n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    console.log(data);\n\n\n    // here we need to put an if condition to prevent the user from press the <button> without intering the city and the country\n    if(city && country){\n    this.setState({\n          temperature : data.main.temp,\n          city : data.name,\n          country : data.sys.country,\n          humidity : data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\",\n    });\n  }\n//   else if(!city){\n//     this.setState({\n//       temperature : \"\",\n//       city : \"the city name is wrong\",\n//       country : \"\",\n//       humidity : \"\",\n//       descriptionn: \"\",\n//       error: \"\",\n// });\n//   }\n//   else if(!country){\n//     this.setState({\n//       temperature : \"\",\n//       city : \"\",\n//       country : \"the country name is wrong\",\n//       humidity : \"\",\n//       descriptionn: \"\",\n//       error: \"\",\n// });\n//  }\n\n  else{\n    this.setState({\n      temperature : \"\",\n      city : \"\",\n      country : \"\",\n      humidity : \"\",\n      descriptionn: \"\",\n      error: \"Please enter the city name and/or the country name\",\n});\n  }\n}\n\nrender() {\n  return (\n    <div>\n      <div className=\"wrapper\">\n        {/* <div className=\"main\"> */}\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-xs-5 title-container\">\n                <Titles  />\n              </div>\n              <div className=\"col-xs-7 form-container\">\n                <Form getWeather={this.getWeather} />\n                <Weather \n                  temperature={this.state.temperature} \n                  humidity={this.state.humidity}\n                  city={this.state.city}\n                  country={this.state.country}\n                  description={this.state.description}\n                  error={this.state.error}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    // </div>\n  );\n}\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}